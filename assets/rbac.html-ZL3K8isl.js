import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as t,c as l,d as e,e as c,f as o,a as n}from"./app-qOaOTfkM.js";const d={},s=n('<h1 id="手撸rbac" tabindex="-1"><a class="header-anchor" href="#手撸rbac" aria-hidden="true">#</a> 手撸RBAC</h1><h2 id="一、概述" tabindex="-1"><a class="header-anchor" href="#一、概述" aria-hidden="true">#</a> 一、概述</h2><h3 id="_1、什么是rbac" tabindex="-1"><a class="header-anchor" href="#_1、什么是rbac" aria-hidden="true">#</a> 1、什么是RBAC</h3><ul><li>RBAC（Role-Based Access Control）是一种访问控制机制，它基于角色的概念，将权限授予特定的角色，而不是直接授予个体用户。</li></ul><p>这种模型允许管理员根据用户的角色来管理他们的权限，从而简化了权限管理和维护。</p><h3 id="_2、为什么要使用rbac" tabindex="-1"><a class="header-anchor" href="#_2、为什么要使用rbac" aria-hidden="true">#</a> 2、为什么要使用RBAC</h3><p>以下是一个使用RBAC和不使用RBAC的例子：</p><blockquote><p>使用RBAC的例子：</p></blockquote><p>假设有一个电子商务网站，有管理员、销售人员和普通用户三种角色。</p><ol><li><p>管理员角色（Admin）：拥有所有权限，可以管理网站的所有功能，包括添加/删除商品、管理用户、查看销售报告等。</p></li><li><p>销售人员角色（Salesperson）：拥有部分权限，可以添加/编辑商品、查看销售报告，但不能管理用户或修改网站设置。</p></li><li><p>普通用户角色（User）：拥有最少权限，只能浏览商品、下单购买，不能访问管理后台或其他敏感信息。</p></li></ol><p>管理员将权限分配给不同的角色，例如：</p><ul><li>管理员角色拥有所有权限。</li><li>销售人员角色拥有添加/编辑商品、查看销售报告等权限。</li><li>普通用户角色只能浏览商品、下单购买。</li></ul><p>这样，无论网站有多少用户，管理员只需管理角色和权限的关系，而不必为每个用户单独分配权限。</p><blockquote><p>没使用RBAC的例子：</p></blockquote><p>在没有RBAC的情况下，管理员需要为每个用户分配具体的权限，例如：</p><ul><li>用户A：可以添加商品、编辑商品、查看销售报告。</li><li>用户B：可以编辑商品、查看销售报告，但不能添加商品。</li><li>用户C：只能浏览商品，不能编辑或添加商品。</li></ul><p>管理员需要为每个用户设置不同的权限，这样会导致管理复杂性增加。而且当用户角色发生变化或新增用户时，管理员需要不断地修改权限设置，增加了维护成本。</p><p>综上所述，使用RBAC可以简化权限管理，提高安全性和管理效率，而不使用RBAC则会增加管理复杂性和维护成本。</p><h3 id="_3、什么是rbac" tabindex="-1"><a class="header-anchor" href="#_3、什么是rbac" aria-hidden="true">#</a> 3、什么是RBAC</h3><p>文字太繁琐，直接上图：</p><figure><img src="https://cloud.greennut.icu/blog/tool/rbac.png" alt="rbac" tabindex="0" loading="lazy"><figcaption>rbac</figcaption></figure><figure><img src="https://cloud.greennut.icu/blog/tool/rbac_db.png" alt="rbac_db" tabindex="0" loading="lazy"><figcaption>rbac_db</figcaption></figure><h2 id="二、具体实现" tabindex="-1"><a class="header-anchor" href="#二、具体实现" aria-hidden="true">#</a> 二、具体实现</h2><ul><li>前端：Layui、Js、Ajax</li><li>后端：Springboot、Mybatis-Plus、Mysql</li></ul><figure><img src="https://cloud.greennut.icu/blog/tool/run.png" alt="访问流程" tabindex="0" loading="lazy"><figcaption>访问流程</figcaption></figure>',25),p={class:"hint-container tip"},h=e("p",{class:"hint-container-title"},"[地址][https://github.com/red-velet/qrbac]：",-1),u={href:"https://github.com/red-velet/qrbac",target:"_blank",rel:"noopener noreferrer"};function b(g,_){const a=r("ExternalLinkIcon");return t(),l("div",null,[s,e("div",p,[h,e("p",null,[e("a",u,[c("https://github.com/red-velet/qrbac"),o(a)])])])])}const B=i(d,[["render",b],["__file","rbac.html.vue"]]);export{B as default};
