const l=JSON.parse('{"key":"v-34fdc371","path":"/docs/treasure-resources/interview/java/java-jvm.html","title":"Java虚拟机-面试题","lang":"zh-CN","frontmatter":{"title":"Java虚拟机-面试题","category":["面经收藏"],"shortTitle":"Java虚拟机","article":false,"date":"2023-01-01T00:00:00.000Z","feed":false,"seo":false},"headers":[{"level":2,"title":"一、内存区域","slug":"一、内存区域","link":"#一、内存区域","children":[{"level":3,"title":"1、什么是jvm","slug":"_1、什么是jvm","link":"#_1、什么是jvm","children":[]},{"level":3,"title":"2、jvm运行过程","slug":"_2、jvm运行过程","link":"#_2、jvm运行过程","children":[]},{"level":3,"title":"3、JVM 后台运行的系统线程主要有哪些","slug":"_3、jvm-后台运行的系统线程主要有哪些","link":"#_3、jvm-后台运行的系统线程主要有哪些","children":[]},{"level":3,"title":"4、jvm的内存区域","slug":"_4、jvm的内存区域","link":"#_4、jvm的内存区域","children":[]},{"level":3,"title":"5、jdk1.6、1.7、1.8 内存区域有什么变化","slug":"_5、jdk1-6、1-7、1-8-内存区域有什么变化","link":"#_5、jdk1-6、1-7、1-8-内存区域有什么变化","children":[]},{"level":3,"title":"6、栈和堆有什么区别","slug":"_6、栈和堆有什么区别","link":"#_6、栈和堆有什么区别","children":[]},{"level":3,"title":"7、为什么使用元空间替代永久代作为方法区的实现","slug":"_7、为什么使用元空间替代永久代作为方法区的实现","link":"#_7、为什么使用元空间替代永久代作为方法区的实现","children":[]},{"level":3,"title":"8、jvm中对象的创建的过程","slug":"_8、jvm中对象的创建的过程","link":"#_8、jvm中对象的创建的过程","children":[]},{"level":3,"title":"9、内存分配的方式有几种","slug":"_9、内存分配的方式有几种","link":"#_9、内存分配的方式有几种","children":[]},{"level":3,"title":"10、JVM 里 new 对象时，堆会发生抢占吗？JVM 是怎么设计来保证线程安全的？","slug":"_10、jvm-里-new-对象时-堆会发生抢占吗-jvm-是怎么设计来保证线程安全的","link":"#_10、jvm-里-new-对象时-堆会发生抢占吗-jvm-是怎么设计来保证线程安全的","children":[]},{"level":3,"title":"11、说一下对象的内存布局组成结构","slug":"_11、说一下对象的内存布局组成结构","link":"#_11、说一下对象的内存布局组成结构","children":[]},{"level":3,"title":"12、访问对象的有几种方式","slug":"_12、访问对象的有几种方式","link":"#_12、访问对象的有几种方式","children":[]},{"level":3,"title":"13、内存溢出和内存泄漏是什么意思？","slug":"_13、内存溢出和内存泄漏是什么意思","link":"#_13、内存溢出和内存泄漏是什么意思","children":[]}]},{"level":2,"title":"二、垃圾回收","slug":"二、垃圾回收","link":"#二、垃圾回收","children":[{"level":3,"title":"1、如何判断对象是垃圾，对象是否死亡，有什么方法","slug":"_1、如何判断对象是垃圾-对象是否死亡-有什么方法","link":"#_1、如何判断对象是垃圾-对象是否死亡-有什么方法","children":[]},{"level":3,"title":"2、Java 中可作为 GC Roots 的对象有哪几种","slug":"_2、java-中可作为-gc-roots-的对象有哪几种","link":"#_2、java-中可作为-gc-roots-的对象有哪几种","children":[]},{"level":3,"title":"3、说一下对象有哪几种引用","slug":"_3、说一下对象有哪几种引用","link":"#_3、说一下对象有哪几种引用","children":[]},{"level":3,"title":"4、finalize()方法了解吗？有什么作用","slug":"_4、finalize-方法了解吗-有什么作用","link":"#_4、finalize-方法了解吗-有什么作用","children":[]},{"level":3,"title":"5、Java 堆的内存分区了解吗","slug":"_5、java-堆的内存分区了解吗","link":"#_5、java-堆的内存分区了解吗","children":[]},{"level":3,"title":"6、Minor GC、Major GC、Mixed GC、Full GC 都是什么意思","slug":"_6、minor-gc、major-gc、mixed-gc、full-gc-都是什么意思","link":"#_6、minor-gc、major-gc、mixed-gc、full-gc-都是什么意思","children":[]},{"level":3,"title":"7、Minor GC和Full GC 什么时候触发","slug":"_7、minor-gc和full-gc-什么时候触发","link":"#_7、minor-gc和full-gc-什么时候触发","children":[]},{"level":3,"title":"8、对象什么时候会进入老年代","slug":"_8、对象什么时候会进入老年代","link":"#_8、对象什么时候会进入老年代","children":[]},{"level":3,"title":"9、你能说说young gc和full gc的过程吗","slug":"_9、你能说说young-gc和full-gc的过程吗","link":"#_9、你能说说young-gc和full-gc的过程吗","children":[]},{"level":3,"title":"10、跨代引用问题","slug":"_10、跨代引用问题","link":"#_10、跨代引用问题","children":[]},{"level":3,"title":"11、空间分配担保机制","slug":"_11、空间分配担保机制","link":"#_11、空间分配担保机制","children":[]},{"level":3,"title":"13、垃圾收集算法了解吗","slug":"_13、垃圾收集算法了解吗","link":"#_13、垃圾收集算法了解吗","children":[]},{"level":3,"title":"14、你了解垃圾回收器有哪些，详细介绍一下？","slug":"_14、你了解垃圾回收器有哪些-详细介绍一下","link":"#_14、你了解垃圾回收器有哪些-详细介绍一下","children":[]},{"level":3,"title":"15、说一下cms垃圾回收器？","slug":"_15、说一下cms垃圾回收器","link":"#_15、说一下cms垃圾回收器","children":[]},{"level":3,"title":"16、什么是Strop The World？ 有哪些区域需要停顿，为什么要停顿？什么是 OopMap ？什么是安全点","slug":"_16、什么是strop-the-world-有哪些区域需要停顿-为什么要停顿-什么是-oopmap-什么是安全点","link":"#_16、什么是strop-the-world-有哪些区域需要停顿-为什么要停顿-什么是-oopmap-什么是安全点","children":[]},{"level":3,"title":"17、三色标记法了解吗，在哪使用的，为什么要引入","slug":"_17、三色标记法了解吗-在哪使用的-为什么要引入","link":"#_17、三色标记法了解吗-在哪使用的-为什么要引入","children":[]},{"level":3,"title":"18、g1垃圾收集器了解吗，详细说说 ？G1中为什么划分Region","slug":"_18、g1垃圾收集器了解吗-详细说说-g1中为什么划分region","link":"#_18、g1垃圾收集器了解吗-详细说说-g1中为什么划分region","children":[]},{"level":3,"title":"19、g1的工作流程是怎么样的，详细展开","slug":"_19、g1的工作流程是怎么样的-详细展开","link":"#_19、g1的工作流程是怎么样的-详细展开","children":[]},{"level":3,"title":"20、CMS和G1有什么区别","slug":"_20、cms和g1有什么区别","link":"#_20、cms和g1有什么区别","children":[]},{"level":3,"title":"21、垃圾收集器应该如何选择？","slug":"_21、垃圾收集器应该如何选择","link":"#_21、垃圾收集器应该如何选择","children":[]}]},{"level":2,"title":"三、类加载","slug":"三、类加载","link":"#三、类加载","children":[{"level":3,"title":"1、类加载过程和类的生命周期","slug":"_1、类加载过程和类的生命周期","link":"#_1、类加载过程和类的生命周期","children":[]},{"level":3,"title":"2、哪些时候会触发类加载？","slug":"_2、哪些时候会触发类加载","link":"#_2、哪些时候会触发类加载","children":[]},{"level":3,"title":"3、类加载器有哪些","slug":"_3、类加载器有哪些","link":"#_3、类加载器有哪些","children":[]},{"level":3,"title":"4、创建对象有几种方式？","slug":"_4、创建对象有几种方式","link":"#_4、创建对象有几种方式","children":[]},{"level":3,"title":"5、什么是双亲委派机制","slug":"_5、什么是双亲委派机制","link":"#_5、什么是双亲委派机制","children":[]},{"level":3,"title":"6、打破双亲委派怎么操作","slug":"_6、打破双亲委派怎么操作","link":"#_6、打破双亲委派怎么操作","children":[]},{"level":3,"title":"7、Tomcat 的类加载机制","slug":"_7、tomcat-的类加载机制","link":"#_7、tomcat-的类加载机制","children":[]}]},{"level":2,"title":"四、JVM调优","slug":"四、jvm调优","link":"#四、jvm调优","children":[{"level":3,"title":"1、常用的命令行性能监控和故障处理工具","slug":"_1、常用的命令行性能监控和故障处理工具","link":"#_1、常用的命令行性能监控和故障处理工具","children":[]},{"level":3,"title":"2、常用的可视化的性能监控和故障处理工具","slug":"_2、常用的可视化的性能监控和故障处理工具","link":"#_2、常用的可视化的性能监控和故障处理工具","children":[]},{"level":3,"title":"3、JVM 的常见参数配置","slug":"_3、jvm-的常见参数配置","link":"#_3、jvm-的常见参数配置","children":[]},{"level":3,"title":"6、频繁 minor gc","slug":"_6、频繁-minor-gc","link":"#_6、频繁-minor-gc","children":[]},{"level":3,"title":"7、频繁 full gc","slug":"_7、频繁-full-gc","link":"#_7、频繁-full-gc","children":[]},{"level":3,"title":"8、如何定位内存泄漏问题","slug":"_8、如何定位内存泄漏问题","link":"#_8、如何定位内存泄漏问题","children":[]},{"level":3,"title":"9、如何定位内存溢出问题","slug":"_9、如何定位内存溢出问题","link":"#_9、如何定位内存溢出问题","children":[]}]}],"git":{},"readingTime":{"minutes":67.21,"words":20162},"filePathRelative":"docs/treasure-resources/interview/java/java-jvm.md","localizedDate":"2023年1月1日","copyright":{"author":"red-velet"}}');export{l as data};
