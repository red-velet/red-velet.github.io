const l=JSON.parse('{"key":"v-0cbf8da4","path":"/docs/treasure-resources/interview/java/java-simple.html","title":"Java基础-面试题","lang":"zh-CN","frontmatter":{"title":"Java基础-面试题","category":["面经收藏"],"shortTitle":"Java基础","date":"2023-01-01T00:00:00.000Z","feed":false,"seo":false},"headers":[{"level":2,"title":"1、基本类型和包装类型的区别","slug":"_1、基本类型和包装类型的区别","link":"#_1、基本类型和包装类型的区别","children":[]},{"level":2,"title":"2、包装类的缓存机制","slug":"_2、包装类的缓存机制","link":"#_2、包装类的缓存机制","children":[]},{"level":2,"title":"3、成员变量与局部变量的区别","slug":"_3、成员变量与局部变量的区别","link":"#_3、成员变量与局部变量的区别","children":[]},{"level":2,"title":"4、静态变量有什么作用","slug":"_4、静态变量有什么作用","link":"#_4、静态变量有什么作用","children":[]},{"level":2,"title":"5、字符型常量和字符串常量的区别","slug":"_5、字符型常量和字符串常量的区别","link":"#_5、字符型常量和字符串常量的区别","children":[]},{"level":2,"title":"6、静态方法为什么不能调用非静态成员","slug":"_6、静态方法为什么不能调用非静态成员","link":"#_6、静态方法为什么不能调用非静态成员","children":[]},{"level":2,"title":"7、静态方法和实例方法有何不同","slug":"_7、静态方法和实例方法有何不同","link":"#_7、静态方法和实例方法有何不同","children":[]},{"level":2,"title":"8、重载和重写有什么区别","slug":"_8、重载和重写有什么区别","link":"#_8、重载和重写有什么区别","children":[]},{"level":2,"title":"9、面向对象和面向过程的区别","slug":"_9、面向对象和面向过程的区别","link":"#_9、面向对象和面向过程的区别","children":[]},{"level":2,"title":"10、面向对象三大特征","slug":"_10、面向对象三大特征","link":"#_10、面向对象三大特征","children":[]},{"level":2,"title":"11、接口和抽象类有什么共同点和区别","slug":"_11、接口和抽象类有什么共同点和区别","link":"#_11、接口和抽象类有什么共同点和区别","children":[]},{"level":2,"title":"12、深拷贝和浅拷贝区别了解吗","slug":"_12、深拷贝和浅拷贝区别了解吗","link":"#_12、深拷贝和浅拷贝区别了解吗","children":[]},{"level":2,"title":"13、Object 类的常见方法有哪些","slug":"_13、object-类的常见方法有哪些","link":"#_13、object-类的常见方法有哪些","children":[]},{"level":2,"title":"14、== 和 equals() 的区别","slug":"_14、-和-equals-的区别","link":"#_14、-和-equals-的区别","children":[]},{"level":2,"title":"15、什么是hashCode()","slug":"_15、什么是hashcode","link":"#_15、什么是hashcode","children":[]},{"level":2,"title":"16、为什么重写 equals() 时必须重写 hashCode() 方法","slug":"_16、为什么重写-equals-时必须重写-hashcode-方法","link":"#_16、为什么重写-equals-时必须重写-hashcode-方法","children":[]},{"level":2,"title":"18、String、StringBuffer、StringBuilder 的区别","slug":"_18、string、stringbuffer、stringbuilder-的区别","link":"#_18、string、stringbuffer、stringbuilder-的区别","children":[]},{"level":2,"title":"19、字符串拼接用+还是 StringBuilder","slug":"_19、字符串拼接用-还是-stringbuilder","link":"#_19、字符串拼接用-还是-stringbuilder","children":[]},{"level":2,"title":"20、这句话创建了几个字符串对象","slug":"_20、这句话创建了几个字符串对象","link":"#_20、这句话创建了几个字符串对象","children":[]},{"level":2,"title":"21、String 类型的变量和常量做+运算时发生了什么","slug":"_21、string-类型的变量和常量做-运算时发生了什么","link":"#_21、string-类型的变量和常量做-运算时发生了什么","children":[]},{"level":2,"title":"22、Java异常的体系介绍一下?","slug":"_22、java异常的体系介绍一下","link":"#_22、java异常的体系介绍一下","children":[]},{"level":2,"title":"23、Throwable有哪些常用方法","slug":"_23、throwable有哪些常用方法","link":"#_23、throwable有哪些常用方法","children":[]},{"level":2,"title":"24、try-catch-finally 使用介绍一下","slug":"_24、try-catch-finally-使用介绍一下","link":"#_24、try-catch-finally-使用介绍一下","children":[]},{"level":2,"title":"25、finally 中的代码一定会执行吗","slug":"_25、finally-中的代码一定会执行吗","link":"#_25、finally-中的代码一定会执行吗","children":[]},{"level":2,"title":"26、什么是泛型","slug":"_26、什么是泛型","link":"#_26、什么是泛型","children":[]},{"level":2,"title":"27、什么是反射","slug":"_27、什么是反射","link":"#_27、什么是反射","children":[]},{"level":2,"title":"27、反射的原理是什么","slug":"_27、反射的原理是什么","link":"#_27、反射的原理是什么","children":[]},{"level":2,"title":"28、反射的应用场景有哪些","slug":"_28、反射的应用场景有哪些","link":"#_28、反射的应用场景有哪些","children":[]}],"git":{},"readingTime":{"minutes":31.38,"words":9413},"filePathRelative":"docs/treasure-resources/interview/java/java-simple.md","localizedDate":"2023年1月1日","copyright":{"author":"red-velet"}}');export{l as data};
