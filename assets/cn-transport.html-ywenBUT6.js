import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as h,a as d}from"./app-lW-6uHYn.js";const r={},i=d('<h1 id="计算机网络传输层-面试题" tabindex="-1"><a class="header-anchor" href="#计算机网络传输层-面试题" aria-hidden="true">#</a> 计算机网络传输层-面试题</h1><h3 id="_1、传输层的主要功能是什么" tabindex="-1"><a class="header-anchor" href="#_1、传输层的主要功能是什么" aria-hidden="true">#</a> 1、传输层的主要功能是什么？</h3><h3 id="_2、传输层提供了哪两种主要的协议" tabindex="-1"><a class="header-anchor" href="#_2、传输层提供了哪两种主要的协议" aria-hidden="true">#</a> 2、传输层提供了哪两种主要的协议？</h3><h3 id="_3、tcp和udp的区别是什么-在什么情况下会选择使用tcp或udp" tabindex="-1"><a class="header-anchor" href="#_3、tcp和udp的区别是什么-在什么情况下会选择使用tcp或udp" aria-hidden="true">#</a> 3、TCP和UDP的区别是什么？在什么情况下会选择使用TCP或UDP？</h3><h3 id="_4、说说什么是三次握手和工作流程" tabindex="-1"><a class="header-anchor" href="#_4、说说什么是三次握手和工作流程" aria-hidden="true">#</a> 4、说说什么是三次握手和工作流程</h3><h3 id="_5、为什么不能是两次握手-不能是四次握手" tabindex="-1"><a class="header-anchor" href="#_5、为什么不能是两次握手-不能是四次握手" aria-hidden="true">#</a> 5、为什么不能是两次握手？不能是四次握手</h3><h3 id="_6、三次握手中每一次没收到报文会发生什么情况" tabindex="-1"><a class="header-anchor" href="#_6、三次握手中每一次没收到报文会发生什么情况" aria-hidden="true">#</a> 6、三次握手中每一次没收到报文会发生什么情况</h3><h3 id="_7、第二次握手传回了-ack-为什么还要传回-syn" tabindex="-1"><a class="header-anchor" href="#_7、第二次握手传回了-ack-为什么还要传回-syn" aria-hidden="true">#</a> 7、第二次握手传回了 ACK，为什么还要传回 SYN</h3><h3 id="_8、第-3-次握手可以携带数据吗" tabindex="-1"><a class="header-anchor" href="#_8、第-3-次握手可以携带数据吗" aria-hidden="true">#</a> 8、第 3 次握手可以携带数据吗</h3><h3 id="_9、什么是半连接队列和-syn-flood-攻击有什么关系" tabindex="-1"><a class="header-anchor" href="#_9、什么是半连接队列和-syn-flood-攻击有什么关系" aria-hidden="true">#</a> 9、什么是半连接队列和 SYN Flood 攻击有什么关系</h3><h3 id="_10、详细说说-tcp-四次挥手的过程" tabindex="-1"><a class="header-anchor" href="#_10、详细说说-tcp-四次挥手的过程" aria-hidden="true">#</a> 10、详细说说 TCP 四次挥手的过程</h3><h3 id="_11、tcp-挥手为什么需要四次呢" tabindex="-1"><a class="header-anchor" href="#_11、tcp-挥手为什么需要四次呢" aria-hidden="true">#</a> 11、TCP 挥手为什么需要四次呢</h3><h3 id="_12、tcp-四次挥手过程中-为什么需要等待-2msl-才进入-closed-关闭状态" tabindex="-1"><a class="header-anchor" href="#_12、tcp-四次挥手过程中-为什么需要等待-2msl-才进入-closed-关闭状态" aria-hidden="true">#</a> 12、TCP 四次挥手过程中，为什么需要等待 2MSL, 才进入 CLOSED 关闭状态</h3><h3 id="_13、保活计时器有什么用" tabindex="-1"><a class="header-anchor" href="#_13、保活计时器有什么用" aria-hidden="true">#</a> 13、保活计时器有什么用</h3><h3 id="_14、close-wait-和-time-wait-的状态和意义" tabindex="-1"><a class="header-anchor" href="#_14、close-wait-和-time-wait-的状态和意义" aria-hidden="true">#</a> 14、CLOSE-WAIT 和 TIME-WAIT 的状态和意义</h3><h3 id="_15、time-wait-状态过多会导致什么问题-怎么解决" tabindex="-1"><a class="header-anchor" href="#_15、time-wait-状态过多会导致什么问题-怎么解决" aria-hidden="true">#</a> 15、TIME_WAIT 状态过多会导致什么问题？怎么解决</h3><h3 id="_16、说说-tcp-报文首部格式" tabindex="-1"><a class="header-anchor" href="#_16、说说-tcp-报文首部格式" aria-hidden="true">#</a> 16、说说 TCP 报文首部格式</h3><h3 id="_17、tcp-是如何保证可靠性的" tabindex="-1"><a class="header-anchor" href="#_17、tcp-是如何保证可靠性的" aria-hidden="true">#</a> 17、TCP 是如何保证可靠性的</h3><h3 id="_18、什么是拥塞控制-tcp如何进行拥塞控制" tabindex="-1"><a class="header-anchor" href="#_18、什么是拥塞控制-tcp如何进行拥塞控制" aria-hidden="true">#</a> 18、什么是拥塞控制？TCP如何进行拥塞控制</h3><h3 id="_19、什么是流量控制-tcp如何进行流量控制" tabindex="-1"><a class="header-anchor" href="#_19、什么是流量控制-tcp如何进行流量控制" aria-hidden="true">#</a> 19、什么是流量控制？TCP如何进行流量控制</h3><h3 id="_20、什么是滑动窗口协议-它在传输层中的作用是什么" tabindex="-1"><a class="header-anchor" href="#_20、什么是滑动窗口协议-它在传输层中的作用是什么" aria-hidden="true">#</a> 20、什么是滑动窗口协议？它在传输层中的作用是什么</h3><h3 id="_21、tcp的滑动窗口大小如何动态调整" tabindex="-1"><a class="header-anchor" href="#_21、tcp的滑动窗口大小如何动态调整" aria-hidden="true">#</a> 21、TCP的滑动窗口大小如何动态调整</h3><h3 id="_22、什么是tcp的粘包和拆包问题-如何解决" tabindex="-1"><a class="header-anchor" href="#_22、什么是tcp的粘包和拆包问题-如何解决" aria-hidden="true">#</a> 22、什么是TCP的粘包和拆包问题？如何解决</h3><h3 id="_23、什么是tcp的超时重传机制-它是如何工作的" tabindex="-1"><a class="header-anchor" href="#_23、什么是tcp的超时重传机制-它是如何工作的" aria-hidden="true">#</a> 23、什么是TCP的超时重传机制？它是如何工作的</h3><h3 id="_24、什么是快速重传和快速恢复" tabindex="-1"><a class="header-anchor" href="#_24、什么是快速重传和快速恢复" aria-hidden="true">#</a> 24、什么是快速重传和快速恢复</h3><h3 id="_25、什么是nagle算法-它的作用是什么" tabindex="-1"><a class="header-anchor" href="#_25、什么是nagle算法-它的作用是什么" aria-hidden="true">#</a> 25、什么是Nagle算法？它的作用是什么</h3><h3 id="_26、什么是延迟确认机制-delayed-ack" tabindex="-1"><a class="header-anchor" href="#_26、什么是延迟确认机制-delayed-ack" aria-hidden="true">#</a> 26、什么是延迟确认机制（Delayed ACK）</h3><h3 id="_27、什么是udp协议-它适用于哪些场景" tabindex="-1"><a class="header-anchor" href="#_27、什么是udp协议-它适用于哪些场景" aria-hidden="true">#</a> 27、什么是UDP协议？它适用于哪些场景</h3><h3 id="_28、说说-tcp-报文首部格式" tabindex="-1"><a class="header-anchor" href="#_28、说说-tcp-报文首部格式" aria-hidden="true">#</a> 28、说说 TCP 报文首部格式</h3><h3 id="_29、为什么-xx-采用-udp-协议" tabindex="-1"><a class="header-anchor" href="#_29、为什么-xx-采用-udp-协议" aria-hidden="true">#</a> 29、为什么 xx 采用 UDP 协议</h3><h3 id="_30、udp-协议为什么不可靠" tabindex="-1"><a class="header-anchor" href="#_30、udp-协议为什么不可靠" aria-hidden="true">#</a> 30、UDP 协议为什么不可靠</h3><h3 id="_31、dns-为什么要用-udp" tabindex="-1"><a class="header-anchor" href="#_31、dns-为什么要用-udp" aria-hidden="true">#</a> 31、DNS 为什么要用 UDP</h3><h3 id="_32、运输层常用端口有哪些" tabindex="-1"><a class="header-anchor" href="#_32、运输层常用端口有哪些" aria-hidden="true">#</a> 32、运输层常用端口有哪些</h3>',33),t=[i];function n(c,s){return e(),h("div",null,t)}const l=a(r,[["render",n],["__file","cn-transport.html.vue"]]);export{l as default};
