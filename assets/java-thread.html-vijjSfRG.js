const l=JSON.parse('{"key":"v-7d695854","path":"/docs/treasure-resources/interview/java/java-thread.html","title":"Java多线程-面试题","lang":"zh-CN","frontmatter":{"title":"Java多线程-面试题","category":["面经收藏"],"shortTitle":"Java多线程","date":"2023-01-01T00:00:00.000Z","feed":false,"seo":false},"headers":[{"level":2,"title":"一、基础","slug":"一、基础","link":"#一、基础","children":[{"level":3,"title":"1、程序、进程、线程","slug":"_1、程序、进程、线程","link":"#_1、程序、进程、线程","children":[]},{"level":3,"title":"2、并行跟并发","slug":"_2、并行跟并发","link":"#_2、并行跟并发","children":[]},{"level":3,"title":"3、线程有几种创建方式","slug":"_3、线程有几种创建方式","link":"#_3、线程有几种创建方式","children":[]},{"level":3,"title":"4、线程有哪些常用的调度方法","slug":"_4、线程有哪些常用的调度方法","link":"#_4、线程有哪些常用的调度方法","children":[]},{"level":3,"title":"5、线程有几种状态/生命周期","slug":"_5、线程有几种状态-生命周期","link":"#_5、线程有几种状态-生命周期","children":[]},{"level":3,"title":"6、线程上下文切换","slug":"_6、线程上下文切换","link":"#_6、线程上下文切换","children":[]},{"level":3,"title":"7、守护线程","slug":"_7、守护线程","link":"#_7、守护线程","children":[]},{"level":3,"title":"8、线程间通信方式","slug":"_8、线程间通信方式","link":"#_8、线程间通信方式","children":[]},{"level":3,"title":"9、sleep() 方法和 wait() 方法","slug":"_9、sleep-方法和-wait-方法","link":"#_9、sleep-方法和-wait-方法","children":[]},{"level":3,"title":"10、为什么 wait() 方法不定义在 Thread 中","slug":"_10、为什么-wait-方法不定义在-thread-中","link":"#_10、为什么-wait-方法不定义在-thread-中","children":[]},{"level":3,"title":"11、线程安全","slug":"_11、线程安全","link":"#_11、线程安全","children":[]}]},{"level":2,"title":"二、ThreadLocal","slug":"二、threadlocal","link":"#二、threadlocal","children":[{"level":3,"title":"1、什么是ThreadLocal","slug":"_1、什么是threadlocal","link":"#_1、什么是threadlocal","children":[]},{"level":3,"title":"2、ThreadLocal使用场景","slug":"_2、threadlocal使用场景","link":"#_2、threadlocal使用场景","children":[]},{"level":3,"title":"3、ThreadLocal 内存泄露","slug":"_3、threadlocal-内存泄露","link":"#_3、threadlocal-内存泄露","children":[]},{"level":3,"title":"4、ThreadLocalMap的结构","slug":"_4、threadlocalmap的结构","link":"#_4、threadlocalmap的结构","children":[]},{"level":3,"title":"5、ThreadLocalMap的Hash冲突","slug":"_5、threadlocalmap的hash冲突","link":"#_5、threadlocalmap的hash冲突","children":[]},{"level":3,"title":"6、ThreadLocalMap的扩容机制","slug":"_6、threadlocalmap的扩容机制","link":"#_6、threadlocalmap的扩容机制","children":[]},{"level":3,"title":"7、父子线程怎么共享数据","slug":"_7、父子线程怎么共享数据","link":"#_7、父子线程怎么共享数据","children":[]}]},{"level":2,"title":"三、Java内存模型","slug":"三、java内存模型","link":"#三、java内存模型","children":[{"level":3,"title":"1、Java内存模型（JMM）","slug":"_1、java内存模型-jmm","link":"#_1、java内存模型-jmm","children":[]},{"level":3,"title":"2、说说你对原子性、可见性、有序性的理解","slug":"_2、说说你对原子性、可见性、有序性的理解","link":"#_2、说说你对原子性、可见性、有序性的理解","children":[]},{"level":3,"title":"3、那说说什么是指令重排？指令重排有限制吗","slug":"_3、那说说什么是指令重排-指令重排有限制吗","link":"#_3、那说说什么是指令重排-指令重排有限制吗","children":[]},{"level":3,"title":"4、volatile有什么作用","slug":"_4、volatile有什么作用","link":"#_4、volatile有什么作用","children":[]},{"level":3,"title":"5、volatile实现原理了解吗","slug":"_5、volatile实现原理了解吗","link":"#_5、volatile实现原理了解吗","children":[]},{"level":3,"title":"6、为什么volatile不能保证原子性","slug":"_6、为什么volatile不能保证原子性","link":"#_6、为什么volatile不能保证原子性","children":[]}]},{"level":2,"title":"四、锁","slug":"四、锁","link":"#四、锁","children":[{"level":3,"title":"1、保证线程安全有什么方案","slug":"_1、保证线程安全有什么方案","link":"#_1、保证线程安全有什么方案","children":[]},{"level":3,"title":"2、介绍一下Java里面常见的锁","slug":"_2、介绍一下java里面常见的锁","link":"#_2、介绍一下java里面常见的锁","children":[]},{"level":3,"title":"3、synchronized怎么使用","slug":"_3、synchronized怎么使用","link":"#_3、synchronized怎么使用","children":[]},{"level":3,"title":"4、synchronized和volatile的区别","slug":"_4、synchronized和volatile的区别","link":"#_4、synchronized和volatile的区别","children":[]},{"level":3,"title":"5、synchronized的实现原理","slug":"_5、synchronized的实现原理","link":"#_5、synchronized的实现原理","children":[]},{"level":3,"title":"6、除了原子性，synchronized可见性，有序性，可重入性怎么实现？","slug":"_6、除了原子性-synchronized可见性-有序性-可重入性怎么实现","link":"#_6、除了原子性-synchronized可见性-有序性-可重入性怎么实现","children":[]},{"level":3,"title":"7、synchronized优化了解吗","slug":"_7、synchronized优化了解吗","link":"#_7、synchronized优化了解吗","children":[]},{"level":3,"title":"8、介绍ReentrantLock","slug":"_8、介绍reentrantlock","link":"#_8、介绍reentrantlock","children":[]},{"level":3,"title":"9、ReentrantLock实现原理","slug":"_9、reentrantlock实现原理","link":"#_9、reentrantlock实现原理","children":[]},{"level":3,"title":"10、ReentrantLock怎么实现公平和非公平锁","slug":"_10、reentrantlock怎么实现公平和非公平锁","link":"#_10、reentrantlock怎么实现公平和非公平锁","children":[]},{"level":3,"title":"11、可中断锁和不可中断锁有什么区别","slug":"_11、可中断锁和不可中断锁有什么区别","link":"#_11、可中断锁和不可中断锁有什么区别","children":[]},{"level":3,"title":"12、ReentrantReadWriteLock","slug":"_12、reentrantreadwritelock","link":"#_12、reentrantreadwritelock","children":[]},{"level":3,"title":"13、说说synchronized和ReentrantLock的区别","slug":"_13、说说synchronized和reentrantlock的区别","link":"#_13、说说synchronized和reentrantlock的区别","children":[]},{"level":3,"title":"14、如何保证多线程下i++ 结果正确","slug":"_14、如何保证多线程下i-结果正确","link":"#_14、如何保证多线程下i-结果正确","children":[]},{"level":3,"title":"15、什么是CAS？ CAS有什么问题","slug":"_15、什么是cas-cas有什么问题","link":"#_15、什么是cas-cas有什么问题","children":[]},{"level":3,"title":"16、什么是AQS","slug":"_16、什么是aqs","link":"#_16、什么是aqs","children":[]},{"level":3,"title":"17、AtomicInteger 的原理","slug":"_17、atomicinteger-的原理","link":"#_17、atomicinteger-的原理","children":[]},{"level":3,"title":"18、什么是死锁？如何避免","slug":"_18、什么是死锁-如何避免","link":"#_18、什么是死锁-如何避免","children":[]},{"level":3,"title":"19、如何排查死锁","slug":"_19、如何排查死锁","link":"#_19、如何排查死锁","children":[]}]},{"level":2,"title":"五、并发工具类","slug":"五、并发工具类","link":"#五、并发工具类","children":[{"level":3,"title":"1、CountDownLatch了解吗","slug":"_1、countdownlatch了解吗","link":"#_1、countdownlatch了解吗","children":[]},{"level":3,"title":"2、CyclicBarrier了解吗","slug":"_2、cyclicbarrier了解吗","link":"#_2、cyclicbarrier了解吗","children":[]},{"level":3,"title":"3、Semaphore了解吗","slug":"_3、semaphore了解吗","link":"#_3、semaphore了解吗","children":[]},{"level":3,"title":"4、Exchanger 了解吗","slug":"_4、exchanger-了解吗","link":"#_4、exchanger-了解吗","children":[]},{"level":3,"title":"5、LongAdder原理","slug":"_5、longadder原理","link":"#_5、longadder原理","children":[]}]},{"level":2,"title":"六、线程池","slug":"六、线程池","link":"#六、线程池","children":[{"level":3,"title":"1、什么是线程池？为什么要有线程池","slug":"_1、什么是线程池-为什么要有线程池","link":"#_1、什么是线程池-为什么要有线程池","children":[]},{"level":3,"title":"2、线程池的应用有哪些","slug":"_2、线程池的应用有哪些","link":"#_2、线程池的应用有哪些","children":[]},{"level":3,"title":"3、有哪几种常见的线程池","slug":"_3、有哪几种常见的线程池","link":"#_3、有哪几种常见的线程池","children":[]},{"level":3,"title":"4、线程池的参数有哪些","slug":"_4、线程池的参数有哪些","link":"#_4、线程池的参数有哪些","children":[]},{"level":3,"title":"5、线程池的拒绝策略有哪些","slug":"_5、线程池的拒绝策略有哪些","link":"#_5、线程池的拒绝策略有哪些","children":[]},{"level":3,"title":"6、线程池有哪几种工作队列","slug":"_6、线程池有哪几种工作队列","link":"#_6、线程池有哪几种工作队列","children":[]},{"level":3,"title":"7、线程池提交execute和submit有什么区别","slug":"_7、线程池提交execute和submit有什么区别","link":"#_7、线程池提交execute和submit有什么区别","children":[]},{"level":3,"title":"8、线程池怎么关闭","slug":"_8、线程池怎么关闭","link":"#_8、线程池怎么关闭","children":[]},{"level":3,"title":"9、线程池异常怎么处理","slug":"_9、线程池异常怎么处理","link":"#_9、线程池异常怎么处理","children":[]},{"level":3,"title":"10、线程池的线程数应该怎么配置","slug":"_10、线程池的线程数应该怎么配置","link":"#_10、线程池的线程数应该怎么配置","children":[]},{"level":3,"title":"11、线程池有几种状态","slug":"_11、线程池有几种状态","link":"#_11、线程池有几种状态","children":[]},{"level":3,"title":"12、线程池工作流程","slug":"_12、线程池工作流程","link":"#_12、线程池工作流程","children":[]},{"level":3,"title":"13、线程池如何实现参数的动态修改","slug":"_13、线程池如何实现参数的动态修改","link":"#_13、线程池如何实现参数的动态修改","children":[]},{"level":3,"title":"14、你能设计实现一个线程池","slug":"_14、你能设计实现一个线程池","link":"#_14、你能设计实现一个线程池","children":[]},{"level":3,"title":"15、单机线程池执行断电了应该怎么处理","slug":"_15、单机线程池执行断电了应该怎么处理","link":"#_15、单机线程池执行断电了应该怎么处理","children":[]}]}],"git":{},"readingTime":{"minutes":87.75,"words":26324},"filePathRelative":"docs/treasure-resources/interview/java/java-thread.md","localizedDate":"2023年1月1日","copyright":{"author":"red-velet"}}');export{l as data};
