const l=JSON.parse('{"key":"v-0b6ba206","path":"/docs/learning-road/408/design-pattern/structure.html","title":"结构型设计模式","lang":"zh-CN","frontmatter":{"title":"结构型设计模式","isOriginal":true,"description":"这是一个用于测试的md","shortTitle":"3、结构型设计模式","category":["计算机基础"],"tag":["设计模式"],"date":"2023-07-26T00:00:00.000Z"},"headers":[{"level":2,"title":"一、代理设计模式","slug":"一、代理设计模式","link":"#一、代理设计模式","children":[{"level":3,"title":"1、静态代理","slug":"_1、静态代理","link":"#_1、静态代理","children":[]},{"level":3,"title":"2、动态代理","slug":"_2、动态代理","link":"#_2、动态代理","children":[]}]},{"level":2,"title":"二、装饰器设计模式","slug":"二、装饰器设计模式","link":"#二、装饰器设计模式","children":[{"level":3,"title":"1、简介","slug":"_1、简介","link":"#_1、简介","children":[]},{"level":3,"title":"2、基本流程","slug":"_2、基本流程","link":"#_2、基本流程","children":[]},{"level":3,"title":"3、案例","slug":"_3、案例","link":"#_3、案例","children":[]}]},{"level":2,"title":"三、桥接设计模式","slug":"三、桥接设计模式","link":"#三、桥接设计模式","children":[{"level":3,"title":"1、简介","slug":"_1、简介-1","link":"#_1、简介-1","children":[]},{"level":3,"title":"2、基本流程","slug":"_2、基本流程-1","link":"#_2、基本流程-1","children":[]},{"level":3,"title":"3、案例","slug":"_3、案例-1","link":"#_3、案例-1","children":[]}]},{"level":2,"title":"四、适配器设计模式","slug":"四、适配器设计模式","link":"#四、适配器设计模式","children":[{"level":3,"title":"1、简介","slug":"_1、简介-2","link":"#_1、简介-2","children":[]},{"level":3,"title":"2、基本流程","slug":"_2、基本流程-2","link":"#_2、基本流程-2","children":[]},{"level":3,"title":"3、使用场景和案例","slug":"_3、使用场景和案例","link":"#_3、使用场景和案例","children":[]},{"level":3,"title":"4、实际案例","slug":"_4、实际案例","link":"#_4、实际案例","children":[]},{"level":3,"title":"5、总结","slug":"_5、总结","link":"#_5、总结","children":[]}]},{"level":2,"title":"五、门面设计模式","slug":"五、门面设计模式","link":"#五、门面设计模式","children":[{"level":3,"title":"1、介绍","slug":"_1、介绍","link":"#_1、介绍","children":[]},{"level":3,"title":"2、核心思想","slug":"_2、核心思想","link":"#_2、核心思想","children":[]},{"level":3,"title":"3、组成和基本流程","slug":"_3、组成和基本流程","link":"#_3、组成和基本流程","children":[]},{"level":3,"title":"4、使用场景","slug":"_4、使用场景","link":"#_4、使用场景","children":[]},{"level":3,"title":"5、具体案例","slug":"_5、具体案例","link":"#_5、具体案例","children":[]},{"level":3,"title":"6、总结","slug":"_6、总结","link":"#_6、总结","children":[]},{"level":3,"title":"7、与适配器设计模式的区别","slug":"_7、与适配器设计模式的区别","link":"#_7、与适配器设计模式的区别","children":[]}]},{"level":2,"title":"六、组合设计模式","slug":"六、组合设计模式","link":"#六、组合设计模式","children":[{"level":3,"title":"1、介绍","slug":"_1、介绍-1","link":"#_1、介绍-1","children":[]},{"level":3,"title":"2、核心思想","slug":"_2、核心思想-1","link":"#_2、核心思想-1","children":[]},{"level":3,"title":"3、组成和基本流程","slug":"_3、组成和基本流程-1","link":"#_3、组成和基本流程-1","children":[]},{"level":3,"title":"4、案例","slug":"_4、案例","link":"#_4、案例","children":[]},{"level":3,"title":"5、总结","slug":"_5、总结-1","link":"#_5、总结-1","children":[]}]},{"level":2,"title":"七、享元设计模式","slug":"七、享元设计模式","link":"#七、享元设计模式","children":[{"level":3,"title":"1、介绍","slug":"_1、介绍-2","link":"#_1、介绍-2","children":[]},{"level":3,"title":"2、核心思想","slug":"_2、核心思想-2","link":"#_2、核心思想-2","children":[]},{"level":3,"title":"3、组成和基本流程","slug":"_3、组成和基本流程-2","link":"#_3、组成和基本流程-2","children":[]},{"level":3,"title":"4、使用场景","slug":"_4、使用场景-1","link":"#_4、使用场景-1","children":[]},{"level":3,"title":"6、具体案例（仅标题）","slug":"_6、具体案例-仅标题","link":"#_6、具体案例-仅标题","children":[]},{"level":3,"title":"7、总结","slug":"_7、总结","link":"#_7、总结","children":[]}]}],"git":{},"readingTime":{"minutes":59.28,"words":17784},"filePathRelative":"docs/learning-road/408/design-pattern/structure.md","localizedDate":"2023年7月26日","excerpt":"<p><strong>结构型设计模式就是利用类与类之间的关系（继承、组合），形成一种类与类之间的结构，通过这种结构提高代码的可拓展性、可维护性和可重用性</strong></p>\\n","copyright":{"author":"red-velet"}}');export{l as data};
